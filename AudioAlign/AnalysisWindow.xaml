<!--
AudioAlign: Audio Synchronization and Analysis Tool
Copyright (C) 2010-2015  Mario Guggenberger <mg@protyposis.net>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<Window x:Class="AudioAlign.AnalysisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:aaam="clr-namespace:Aurio.Matching;assembly=Aurio"
        xmlns:oxy="http://oxyplot.org/wpf"
        Title="Alignment Analysis" Height="504" Width="816"
        FontSize="11" 
        Background="{StaticResource WindowBackgroundBrush}" WindowStyle="ToolWindow" Loaded="Window_Loaded" Unloaded="Window_Unloaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="AnalysisModeValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="aaam:AnalysisMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GroupBox Header="Parameters" Name="parameterGroupBox">
                <Grid Height="29">
                    <Label Content="Mode:" Height="20" HorizontalAlignment="Left" Margin="5,9,0,0" VerticalAlignment="Top" />
                    <ComboBox Height="23" HorizontalAlignment="Left" Margin="42,0,0,1" Name="analysisMode" VerticalAlignment="Bottom" Width="95" ItemsSource="{Binding Source={StaticResource AnalysisModeValues}}" SelectedValue="{Binding Path=AnalysisMode, Mode=TwoWay}" />
                    <Label Content="Window Size:" Height="20" HorizontalAlignment="Left" Margin="152,9,0,0" VerticalAlignment="Top" />
                    <TextBox Name="windowSize" Height="23" Margin="223,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="54" Text="{Binding Path=AnalysisWindowSize, Mode=TwoWay}" />
                    <Label Content="Interval Size:" Height="20" HorizontalAlignment="Left" Margin="283,9,0,0" VerticalAlignment="Top" />
                    <TextBox Name="intervalSize" Height="23" Margin="350,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="54" Text="{Binding Path=AnalysisIntervalLength, Mode=TwoWay}" />
                    <Label Content="Sample Rate:" Height="20" HorizontalAlignment="Left" Margin="410,9,0,0" VerticalAlignment="Top" />
                    <ComboBox Height="23" HorizontalAlignment="Left" Margin="479,4,0,0" Name="sampleRate" VerticalAlignment="Top" Width="88" Text="{Binding Path=AnalysisSampleRate, Mode=TwoWay}" IsEditable="True">
                        <ComboBoxItem>2756</ComboBoxItem>
                        <ComboBoxItem>5512</ComboBoxItem>
                        <ComboBoxItem>8000</ComboBoxItem>
                        <ComboBoxItem>11025</ComboBoxItem>
                        <ComboBoxItem>12000</ComboBoxItem>
                        <ComboBoxItem>16000</ComboBoxItem>
                        <ComboBoxItem>22050</ComboBoxItem>
                        <ComboBoxItem>44100</ComboBoxItem>
                        <ComboBoxItem>48000</ComboBoxItem>
                        <ComboBoxItem>88200</ComboBoxItem>
                        <ComboBoxItem>96000</ComboBoxItem>
                        <ComboBoxItem>192000</ComboBoxItem>
                    </ComboBox>
                    <Button Name="analyzeButton" Content="Analyze" Height="23" Width="75" Click="AnalyzeButton_Click" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                </Grid>
            </GroupBox>
            <Grid Grid.Row="1" Margin="0,3,0,0" Height="25">
                <ProgressBar Name="progressBar" />
                <Label VerticalContentAlignment="Center" VerticalAlignment="Stretch" Margin="6,0" FontSize="11">
                    <TextBlock Name="progressBarLabel" TextTrimming="CharacterEllipsis" />
                </Label>
            </Grid>
            <GroupBox Grid.Row="2" Header="Results" Margin="0,3,0,0">
                <Grid Margin="0,3,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <DataGrid Name="analysisResultsGrid" SelectionUnit="FullRow" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" 
                              HeadersVisibility="Column" CanUserAddRows="False">
                        <DataGrid.Resources>
                            <Style TargetType="DataGridCell">
                                <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" Binding="{Binding Time}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Min" Binding="{Binding Min, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Max" Binding="{Binding Max, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Σ+" Binding="{Binding SumPositive, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Σ-" Binding="{Binding SumNegative, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="|Σ|" Binding="{Binding SumAbsolute, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="μ+" Binding="{Binding AveragePositive, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="μ-" Binding="{Binding AverageNegative, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="|μ|" Binding="{Binding AverageAbsolute, StringFormat='{}{0:0.00000}'}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="%" Binding="{Binding Score, StringFormat='{}{0:P3}'}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <oxy:PlotView Grid.Column="1" Name="resultPlotter" Margin="3,0,0,0"/>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
